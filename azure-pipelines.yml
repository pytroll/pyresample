trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - v*
variables:
  CIBW_BUILDING: "true"
  CIBW_SKIP: "cp27-* cp34-* cp35-* pp27-* pp36-*"
  CIBW_TEST_REQUIRES: "pytest pytest-sugar"
  CIBW_TEST_COMMAND: "python -c \"import pyresample; from pyresample.ewa import *\""
  CIBW_BUILD_VERBOSITY: "2"
  CIBW_BEFORE_BUILD: "python -m pip install -U numpy Cython pip setuptools"
  # Cython 0.29.x doesn't support python 3.8 so extensions were built manually
#  CIBW_ENVIRONMENT: "USE_CYTHON=True"
  # needed until pykdtree auto-detects this
  CIBW_ENVIRONMENT_MACOS: "USE_OMP=0"
jobs:
- job: linux
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install cibuildwheel twine numpy Cython
        python setup.py sdist -d wheelhouse
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/wheelhouse
        artifact: pyresampleDeployLinux
- job: macos
  pool: {vmImage: 'macOS-10.14'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/wheelhouse
        artifact: pyresampleDeployMacOS
- job: windows
  pool: {vmImage: 'vs2017-win2016'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/wheelhouse
        artifact: pyresampleDeployWindows
- job: deployPyPI
  pool: {vmImage: 'Ubuntu-16.04'}
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  dependsOn:
    - linux
    - macos
    - windows
  steps:
    - task: UsePythonVersion@0
    - task: DownloadPipelineArtifact@2
      inputs:
        patterns: |
          pyresampleDeployLinux/*
          pyresampleDeployMacOS/*.whl
          pyresampleDeployWindows/*.whl
    - bash: |
        cd $(Pipeline.Workspace)
        python -m pip install --upgrade pip
        pip install twine
        twine upload -u "__token__" --skip-existing pyresampleDeployLinux/* pyresampleDeployMacOS/* pyresampleDeployWindows/*
      env:
        TWINE_PASSWORD: $(pypiToken)
